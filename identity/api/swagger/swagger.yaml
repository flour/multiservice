swagger: "2.0"
info:
  version: "0.1.0"
  title: Basic Identity service
host: localhost:8080 
basePath: /api
schemes:
  - http
  - https
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
consumes:
  - application/json
produces:
  - application/json
paths:
  /login:
    x-swagger-router-controller: login_controller
    post:
      operationId: loginPost
      description: "Login with login and password"
      parameters:
        - name: authentication
          in: body
          required: true
          schema:
            $ref: "#/definitions/Authentication"
      responses:
        "200":
          description: "Logged in!"
          schema:
            $ref: "#/definitions/Token"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
  /register:
    x-swagger-router-controller: login_controller
    post:
      operationId: registerPost
      description: "Register new user"
      parameters:
        - name: userInfo
          in: body
          required: true
          schema:
            $ref: "#/definitions/UserInfo"
      responses:
        "201":
          description: "Registerd"
          schema:
            $ref: "#/definitions/Resource"
        "400":
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        "500":
          description: "Could not register new user."
          schema:
            $ref: "#/definitions/Error"
  /unprotected:
    x-swagger-router-controller: main_controller
    get:
      operationId: uprotectedGet
      description: "Unprotected endpoint"
      responses:
        "200":
          description: "All ok!"
          schema:
            $ref: "#/definitions/Resource"
  /protected:
    x-swagger-router-controller: main_controller
    get:
      operationId: protectedGet
      description: "Protected endpoint, only accessible to authenticated users"
      security:
        - Bearer: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Resource"
        "403":
          description: "Access denied"
          schema:
            $ref: "#/definitions/Error"
  /makegood:
    x-swagger-router-controller: main_controller
    get:
      operationId: makeGood
      description: "Here we request user's accounting information"
      security:
        - Bearer: []
      responses:
        "200":
            description: "Success"
            schema:
              $ref: "#/definitions/Resource"
        "403":
            description: "Access denied"
            schema:
              $ref: "#/definitions/Error"
  /swagger:
    x-swagger-pipe: swagger_raw
definitions:
  Authentication:
    type: object
    required:
      - username
      - password
    properties:
      username:
        type: string
        example: "username"
      password:
        type: string
        example: "password"
  UserInfo:
    type: object
    required:
      - username
      - password
      - email
      - firstname
      - lastname
    properties:
      firstname:
        type: string
        example: "firstname"
      lastname:
        type: string
        example: "lastname"
      email:
        type: string
        example: "email"
      username:
        type: string
        example: "username"
      password:
        type: string
        example: "password"
  Resource:
    type: object
    properties:
      resource:
        type: string
  Token:
    type: object
    properties:
      token:
        type: string
  Error:
    required:
      - message
    properties:
      message:
        type: string
